(()=>{"use strict";const e=document.querySelector(".body_theme_dark"),t=document.querySelector(".header__checkbox"),o=document.querySelector(".header__checkbox-ball"),s=document.querySelector(".header__checkbox-label"),n=document.querySelector(".name"),r=document.querySelectorAll(".timer__numbers"),c=document.querySelectorAll(".timer__title"),l=document.getElementById("days"),i=document.getElementById("hours"),a=document.getElementById("minutes"),u=document.getElementById("seconds"),_=document.querySelector(".icon__instagram"),h=document.querySelector(".icon__facebook"),g=document.querySelector(".icon__linkedin"),d=`${(new Date).getHours()}:${(new Date).getMinutes()}`;function m(){e.classList.toggle("body_theme_light"),s.classList.toggle("header__checkbox-label_checked"),o.classList.toggle("header__checkbox-ball_checked"),n.classList.toggle("name_theme_light"),r.forEach((e=>e.classList.toggle("timer__numbers_theme_light"))),c.forEach((e=>e.classList.toggle("timer__title_theme_light"))),_.classList.toggle("icon__instagram_theme_light"),h.classList.toggle("icon__facebook_theme_light"),g.classList.toggle("icon__linkedin_theme_light")}function p(e){return e>0&&e<10?`0${e}`:e}const y=new class{constructor(e){this._apiUrl=e.apiUrl}_getRes(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}_request(e,t){return fetch(`${this._apiUrl}/${e}`,t).then(this._getRes)}getUserLocation(){return this._request("ipgeo?apiKey=8ffa38ec677445779ee783968bee7e3e",{method:"GET"})}}({apiUrl:"https://api.ipgeolocation.io"}),f=new class{constructor(e){this._apiUrl=e.apiUrl,this._headers=e.headers}_getRes(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}_request(e,t){return fetch(`${this._apiUrl}/${e}`,t).then(this._getRes)}getSunriseSunsetData(e,t){return this._request(`json?lat=${e}&lng=${t}`,{method:"GET"})}}({apiUrl:"https://api.sunrise-sunset.org"});function b(e){const[t,o]=e.split(" ");let[s,n]=t.split(":");return"12"===s&&(s="00"),"PM"===o&&(s=parseInt(s,10)+12),`${p(s)}:${p(n)}`}!function(e){const t=setInterval(o,1e3);function o(){const e=function(e){const t=Date.parse(new Date)-Date.parse(e)-18e6;let o=0,s=0,n=0,r=0;return t>0&&(o=Math.floor(t/1e3/60/60/24),s=Math.floor(t/1e3/60/60%24),n=Math.floor(t/1e3/60%60),r=Math.floor(t/1e3%60)),{total:t,days:o,hours:s,minutes:n,seconds:r}}("2022-02-24");e.total<=0&&clearInterval(t),l.textContent=p(e.days),i.textContent=p(e.hours),a.textContent=p(e.minutes),u.textContent=p(e.seconds)}o()}(),y.getUserLocation().then((e=>f.getSunriseSunsetData(e.latitude,e.longitude).then((e=>{const t=b(e.results.sunrise),o=b(e.results.astronomical_twilight_end);!function(e,t,o){e>=t&&e<=o&&m()}(d,t,o)})).catch((e=>console.log(e))))).catch((e=>console.log(e))),t.addEventListener("change",m),o.addEventListener("click",m)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,