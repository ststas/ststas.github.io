(()=>{"use strict";const e=document.querySelector(".page"),t=document.querySelector(".header__checkbox"),o=document.querySelector(".header__checkbox-ball"),s=document.querySelector(".header__checkbox-label"),n=document.querySelector(".name"),r=document.querySelectorAll(".timer__numbers"),c=document.querySelectorAll(".timer__title"),l=document.getElementById("days"),i=document.getElementById("hours"),a=document.getElementById("minutes"),u=document.getElementById("seconds"),_=document.querySelector(".icon__instagram"),h=document.querySelector(".icon__facebook"),g=document.querySelector(".icon__linkedin"),m=`${(new Date).getHours()}:${(new Date).getMinutes()}`,d=new class{constructor(e){this._apiUrl=e.apiUrl}_getRes(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}_request(e,t){return fetch(`${this._apiUrl}/${e}`,t).then(this._getRes)}getUserLocation(){return this._request("json",{method:"GET"})}}({apiUrl:"http://ip-api.com"}),p=new class{constructor(e){this._apiUrl=e.apiUrl,this._headers=e.headers}_getRes(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}_request(e,t){return fetch(`${this._apiUrl}/${e}`,t).then(this._getRes)}getSunriseSunsetData(e,t){return this._request(`json?lat=${e}&lng=${t}`,{method:"GET"})}}({apiUrl:"https://api.sunrise-sunset.org"});function f(e){return e>0&&e<10?`0${e}`:e}function y(){e.classList.toggle("page_theme_light"),s.classList.toggle("header__checkbox-label_checked"),o.classList.toggle("header__checkbox-ball_checked"),n.classList.toggle("name_theme_light"),r.forEach((e=>e.classList.toggle("timer__numbers_theme_light"))),c.forEach((e=>e.classList.toggle("timer__title_theme_light"))),_.classList.toggle("icon__instagram_theme_light"),h.classList.toggle("icon__facebook_theme_light"),g.classList.toggle("icon__linkedin_theme_light")}function k(e){const[t,o]=e.split(" ");let[s,n]=t.split(":");return"12"===s&&(s="00"),"PM"===o&&(s=parseInt(s,10)+12),`${s}:${n}`}!function(e){const t=setInterval(o,1e3);function o(){const e=function(e){const t=Date.parse(new Date)-Date.parse(e)-18e6;let o=0,s=0,n=0,r=0;return t>0&&(o=Math.floor(t/1e3/60/60/24),s=Math.floor(t/1e3/60/60%24),n=Math.floor(t/1e3/60%60),r=Math.floor(t/1e3%60)),{total:t,days:o,hours:s,minutes:n,seconds:r}}("2022-02-24");e.total<=0&&clearInterval(t),l.textContent=f(e.days),i.textContent=f(e.hours),a.textContent=f(e.minutes),u.textContent=f(e.seconds)}o()}(),d.getUserLocation().then((e=>p.getSunriseSunsetData(e.lat,e.lon).then((e=>{console.log(e.results);const t=k(e.results.sunrise),o=k(e.results.astronomical_twilight_end);!function(e,t,o){console.log(e),console.log(t),console.log(o),e>=t&&e<=o&&y()}(m,t,o)})).catch((e=>console.log(e))))).catch((e=>console.log(e))),t.addEventListener("change",y),o.addEventListener("click",y)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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Qm5GLEVBQVNvRixpQkFBaUIsU0FBVXJDLEdBQ3BDOUMsRUFBYW1GLGlCQUFpQixRQUFTckMsRSIsInNvdXJjZXMiOlsid2VicGFjazovL3dhci10aW1lci8uL3NyYy9wYWdlcy9pbmRleC5qcyIsIndlYnBhY2s6Ly93YXItdGltZXIvLi9zcmMvc2NyaXB0cy9jb21wb25lbnRzL0FwaUxvY2F0aW9uLmpzIiwid2VicGFjazovL3dhci10aW1lci8uL3NyYy9zY3JpcHRzL2NvbXBvbmVudHMvQXBpU3VucmlzZVN1bnNldC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyAvLyBJTVBPUlRTXG5pbXBvcnQgXCIuLi9wYWdlcy9pbmRleC5jc3NcIlxuaW1wb3J0IEFwaUxvY2F0aW9uIGZyb20gXCIuLi9zY3JpcHRzL2NvbXBvbmVudHMvQXBpTG9jYXRpb25cIlxuaW1wb3J0IEFwaVN1bnJpc2VTdW5zZXQgZnJvbSBcIi4uL3NjcmlwdHMvY29tcG9uZW50cy9BcGlTdW5yaXNlU3Vuc2V0XCJcblxuLy8gLy8gQ09OU1RTXG4vLyBQQUdFXG5jb25zdCBwYWdlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnBhZ2UnKTtcbi8vIEhFQURFUlxuY29uc3QgY2hlY2tCb3ggPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuaGVhZGVyX19jaGVja2JveCcpO1xuY29uc3QgY2hlY2tCb3hCYWxsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmhlYWRlcl9fY2hlY2tib3gtYmFsbCcpO1xuY29uc3QgY2hlY2tCb3hMYWJlbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5oZWFkZXJfX2NoZWNrYm94LWxhYmVsJyk7XG4vLyBOQU1FICYgVElNRVJcbmNvbnN0IGNvbnRlbnROYW1lID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLm5hbWUnKTtcbmNvbnN0IHRpbWVyTnVtYmVycyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy50aW1lcl9fbnVtYmVycycpO1xuY29uc3QgdGltZXJUaXRsZXMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcudGltZXJfX3RpdGxlJyk7XG5jb25zdCBkYXlzID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2RheXMnKTtcbmNvbnN0IGhvdXJzID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2hvdXJzJyk7XG5jb25zdCBtaW51dGVzID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ21pbnV0ZXMnKTtcbmNvbnN0IHNlY29uZHMgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnc2Vjb25kcycpO1xuLy8gRk9PVEVSXG5jb25zdCBpY29uSW5zdGFncmFtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmljb25fX2luc3RhZ3JhbScpO1xuY29uc3QgaWNvbkZhY2Vib29rID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmljb25fX2ZhY2Vib29rJyk7XG5jb25zdCBpY29uTGlua2VkaW4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuaWNvbl9fbGlua2VkaW4nKTtcbi8vIERBVEUgJiBUSU1FXG5jb25zdCBkZWF0aERhdGUgPSAnMjAyMi0wMi0yNCc7XG5jb25zdCBjdXJyZW50VGltZSA9IGAke25ldyBEYXRlKCkuZ2V0SG91cnMoKX06JHtuZXcgRGF0ZSgpLmdldE1pbnV0ZXMoKX1gXG5cbi8vIC8vIEFQSVxuY29uc3QgYXBpTG9jYXRpb24gPSBuZXcgQXBpTG9jYXRpb24gKHtcbiAgYXBpVXJsOiAnaHR0cDovL2lwLWFwaS5jb20nXG59KVxuY29uc3QgYXBpU3VucmlzZVN1bnNldCA9IG5ldyBBcGlTdW5yaXNlU3Vuc2V0ICh7XG4gIGFwaVVybDogJ2h0dHBzOi8vYXBpLnN1bnJpc2Utc3Vuc2V0Lm9yZydcblxufSlcblxuLy8gLy8gRlVOQ1RJT05TXG4vLyBQQVNTRUQgVElNRSBHRVRURVJcbmZ1bmN0aW9uIGdldFRpbWVQYXNzZWQoZW5kdGltZSkge1xuICBjb25zdCB0ID0gRGF0ZS5wYXJzZShuZXcgRGF0ZSgpKSAtIERhdGUucGFyc2UoZW5kdGltZSkgLSAxODAwMDAwMDtcbiAgbGV0IGRheXMgPSAwLFxuICAgIGhvdXJzID0gMCxcbiAgICBtaW51dGVzID0gMCxcbiAgICBzZWNvbmRzID0gMDtcbiAgaWYgKHQgPiAwKSB7XG4gICAgZGF5cyA9IE1hdGguZmxvb3IodCAvIDEwMDAgLyA2MCAvIDYwIC8gMjQpOyBcbiAgICBob3VycyA9IE1hdGguZmxvb3IodCAvIDEwMDAgLyA2MCAvIDYwICUgMjQpO1xuICAgIG1pbnV0ZXMgPSBNYXRoLmZsb29yKHQgLyAxMDAwIC8gNjAgJSA2MCk7XG4gICAgc2Vjb25kcyA9IE1hdGguZmxvb3IodCAvIDEwMDAgJSA2MCk7XG4gIH1cbiAgcmV0dXJuIHtcbiAgICAndG90YWwnIDogdCxcbiAgICAnZGF5cycgOiBkYXlzLFxuICAgICdob3VycycgOiBob3VycyxcbiAgICAnbWludXRlcycgOiBtaW51dGVzLFxuICAgICdzZWNvbmRzJyA6IHNlY29uZHNcbiAgfTtcbn1cbi8vIFpFUk8gU0VUVEVSXG5mdW5jdGlvbiBzZXRaZXJvKG51bSkge1xuICBpZiAobnVtID4gMCAmJiBudW0gPCAxMCkge1xuICAgICAgcmV0dXJuIGAwJHtudW19YDtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gbnVtO1xuICAgIH0gXG59XG4vLyBUSU1FIFNFVFRFUlxuZnVuY3Rpb24gc2V0Q2xvY2soZW5kdGltZSl7XG4gIGNvbnN0IHRpbWVJbnRlcnZhbCA9IHNldEludGVydmFsKHVwZGF0ZUNsb2NrLCAxMDAwKTtcblxuICBmdW5jdGlvbiB1cGRhdGVDbG9jaygpe1xuICAgIGNvbnN0IHQgPSBnZXRUaW1lUGFzc2VkKGVuZHRpbWUpO1xuICAgIGlmICh0LnRvdGFsIDw9IDApIHtcbiAgICAgICAgY2xlYXJJbnRlcnZhbCh0aW1lSW50ZXJ2YWwpO1xuICAgIH1cbiAgICBkYXlzLnRleHRDb250ZW50ID0gc2V0WmVybyh0LmRheXMpO1xuICAgIGhvdXJzLnRleHRDb250ZW50ID0gc2V0WmVybyh0LmhvdXJzKTtcbiAgICBtaW51dGVzLnRleHRDb250ZW50ID0gc2V0WmVybyh0Lm1pbnV0ZXMpO1xuICAgIHNlY29uZHMudGV4dENvbnRlbnQgPSBzZXRaZXJvKHQuc2Vjb25kcyk7XG4gIH0gXG4gIHVwZGF0ZUNsb2NrKCk7ICAgICAgXG59XG5zZXRDbG9jayhkZWF0aERhdGUpO1xuLy8gVEhFTUUgU1dJVENIRVJcbmZ1bmN0aW9uIHN3aXRjaFRoZW1lKCkge1xuICBwYWdlLmNsYXNzTGlzdC50b2dnbGUoJ3BhZ2VfdGhlbWVfbGlnaHQnKTtcbiAgY2hlY2tCb3hMYWJlbC5jbGFzc0xpc3QudG9nZ2xlKCdoZWFkZXJfX2NoZWNrYm94LWxhYmVsX2NoZWNrZWQnKTtcbiAgY2hlY2tCb3hCYWxsLmNsYXNzTGlzdC50b2dnbGUoJ2hlYWRlcl9fY2hlY2tib3gtYmFsbF9jaGVja2VkJyk7ICAgIFxuICBjb250ZW50TmFtZS5jbGFzc0xpc3QudG9nZ2xlKCduYW1lX3RoZW1lX2xpZ2h0Jyk7XG4gIHRpbWVyTnVtYmVycy5mb3JFYWNoKG51bWJlciA9PiBudW1iZXIuY2xhc3NMaXN0LnRvZ2dsZSgndGltZXJfX251bWJlcnNfdGhlbWVfbGlnaHQnKSk7XG4gIHRpbWVyVGl0bGVzLmZvckVhY2godGl0bGUgPT4gdGl0bGUuY2xhc3NMaXN0LnRvZ2dsZSgndGltZXJfX3RpdGxlX3RoZW1lX2xpZ2h0JykpO1xuICBpY29uSW5zdGFncmFtLmNsYXNzTGlzdC50b2dnbGUoJ2ljb25fX2luc3RhZ3JhbV90aGVtZV9saWdodCcpO1xuICBpY29uRmFjZWJvb2suY2xhc3NMaXN0LnRvZ2dsZSgnaWNvbl9fZmFjZWJvb2tfdGhlbWVfbGlnaHQnKTtcbiAgaWNvbkxpbmtlZGluLmNsYXNzTGlzdC50b2dnbGUoJ2ljb25fX2xpbmtlZGluX3RoZW1lX2xpZ2h0Jyk7XG59XG4vLyBUSEVNRSBTRVRURVJcbmZ1bmN0aW9uIHNldFRoZW1lIChjdXJyZW50VGltZSwgc3VucmlzZVRpbWUsIHN1bnNldFRpbWUpIHtcbiAgY29uc29sZS5sb2coY3VycmVudFRpbWUpXG4gIGNvbnNvbGUubG9nKHN1bnJpc2VUaW1lKVxuICBjb25zb2xlLmxvZyhzdW5zZXRUaW1lKVxuXG4gIGlmIChjdXJyZW50VGltZSA+PSBzdW5yaXNlVGltZSAmJiBjdXJyZW50VGltZSA8PSBzdW5zZXRUaW1lICkge1xuICAgIHN3aXRjaFRoZW1lKCk7XG4gIH1cbn1cbi8vIDEySCBUTyAyNEggQ09OVkVSVEVSXG5mdW5jdGlvbiBjb252ZXJ0VGltZSAodGltZVN0cikge1xuICBjb25zdCBbdGltZSwgbW9kaWZpZXJdID0gdGltZVN0ci5zcGxpdCgnICcpO1xuICBsZXQgW2hvdXJzLCBtaW51dGVzXSA9IHRpbWUuc3BsaXQoJzonKTtcbiAgaWYgKGhvdXJzID09PSAnMTInKSB7XG4gICAgaG91cnMgPSAnMDAnO1xuICB9XG4gIGlmIChtb2RpZmllciA9PT0gJ1BNJykge1xuICAgIGhvdXJzID0gcGFyc2VJbnQoaG91cnMsIDEwKSArIDEyO1xuICB9XG4gIHJldHVybiBgJHtob3Vyc306JHttaW51dGVzfWBcbn1cbi8vIEFVVE8gU1VOU0VUICYgU1VOUklTRSBUSEVNRSBTRVRURVJcbmZ1bmN0aW9uIHNldFVzZXJTdW5zZXRTdW5yaXNlRGF0YSgpIHtcbiAgcmV0dXJuIGFwaUxvY2F0aW9uLmdldFVzZXJMb2NhdGlvbigpXG4gICAgLnRoZW4ocmVzID0+IHtcbiAgICAgIHJldHVybiBhcGlTdW5yaXNlU3Vuc2V0LmdldFN1bnJpc2VTdW5zZXREYXRhKHJlcy5sYXQsIHJlcy5sb24pXG4gICAgICAudGhlbihyZXMgPT4ge1xuICAgICAgICBjb25zb2xlLmxvZyhyZXMucmVzdWx0cylcbiAgICAgICAgY29uc3Qgc3VucmlzZVRpbWUgPSBjb252ZXJ0VGltZShyZXMucmVzdWx0cy5zdW5yaXNlKVxuICAgICAgICBjb25zdCBzdW5zZXRUaW1lID0gY29udmVydFRpbWUocmVzLnJlc3VsdHMuYXN0cm9ub21pY2FsX3R3aWxpZ2h0X2VuZClcbiAgICAgICAgc2V0VGhlbWUoY3VycmVudFRpbWUsIHN1bnJpc2VUaW1lLCBzdW5zZXRUaW1lKVxuICAgICAgfSlcbiAgICAgIC5jYXRjaChlcnIgPT4gY29uc29sZS5sb2coZXJyKSlcbiAgICB9KVxuICAgIC5jYXRjaChlcnIgPT4gY29uc29sZS5sb2coZXJyKSlcbn1cbnNldFVzZXJTdW5zZXRTdW5yaXNlRGF0YSgpXG5cbi8vIC8vIEVWRU5UIExJU1RFTkVSU1xuY2hlY2tCb3guYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgc3dpdGNoVGhlbWUpO1xuY2hlY2tCb3hCYWxsLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgc3dpdGNoVGhlbWUpOyIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIEFwaUxvY2F0aW9uIHtcbiAgY29uc3RydWN0b3IoZGF0YSl7XG4gICAgdGhpcy5fYXBpVXJsID0gZGF0YS5hcGlVcmw7XG4gICAgLy8gdGhpcy5faGVhZGVycyA9IGRhdGEuaGVhZGVyc1xuICB9XG4gIC8vINGE0YPQvdC60YbQuNGPINC/0L7Qu9GD0YfQtdC90LjRjyDQvtGC0LLQtdGC0LAg0Lgg0L/RgNC10L7QsdGA0LDQt9C+0LLQsNC90LjRjyDQtdCz0L4g0LIg0L7QsdGK0LXQutGCXG4gIF9nZXRSZXMocmVzKSB7XG4gICAgcmV0dXJuIChyZXMub2sgPyByZXMuanNvbigpIDogUHJvbWlzZS5yZWplY3QoYEVycm9yOiAke3Jlcy5zdGF0dXN9YCkpXG4gIH1cbiAgLy8g0YTRg9C90LrRhtC40Y8g0L7RgtC/0YDQsNCy0LrQuCBmZXRjaCDQt9Cw0L/RgNC+0YHQsFxuICBfcmVxdWVzdCAodXJsLCBvcHRpb25zKSB7XG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2FwaVVybH0vJHt1cmx9YCwgb3B0aW9ucykudGhlbih0aGlzLl9nZXRSZXMpXG4gIH1cbiAgLy8g0YTRg9C90LrRhtC40Y8g0L/QvtC70YPRh9C10L3QuNGPINC40L3RhNC+0YDQvNCw0YbQuNC4INC/0L7Qu9GM0LfQvtCy0LDRgtC10LvRj1xuICBnZXRVc2VyTG9jYXRpb24oKSB7XG4gICAgcmV0dXJuIHRoaXMuX3JlcXVlc3QoYGpzb25gLCB7bWV0aG9kOiAnR0VUJ30pXG4gIH1cbn0iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBBcGlTdW5yaXNlU3Vuc2V0IHtcbiAgY29uc3RydWN0b3IoZGF0YSl7XG4gICAgdGhpcy5fYXBpVXJsID0gZGF0YS5hcGlVcmw7XG4gICAgdGhpcy5faGVhZGVycyA9IGRhdGEuaGVhZGVyc1xuICB9XG4gIC8vINGE0YPQvdC60YbQuNGPINC/0L7Qu9GD0YfQtdC90LjRjyDQvtGC0LLQtdGC0LAg0Lgg0L/RgNC10L7QsdGA0LDQt9C+0LLQsNC90LjRjyDQtdCz0L4g0LIg0L7QsdGK0LXQutGCXG4gIF9nZXRSZXMocmVzKSB7XG4gICAgcmV0dXJuIChyZXMub2sgPyByZXMuanNvbigpIDogUHJvbWlzZS5yZWplY3QoYEVycm9yOiAke3Jlcy5zdGF0dXN9YCkpXG4gIH1cbiAgLy8g0YTRg9C90LrRhtC40Y8g0L7RgtC/0YDQsNCy0LrQuCBmZXRjaCDQt9Cw0L/RgNC+0YHQsFxuICBfcmVxdWVzdCAodXJsLCBvcHRpb25zKSB7XG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2FwaVVybH0vJHt1cmx9YCwgb3B0aW9ucykudGhlbih0aGlzLl9nZXRSZXMpXG4gIH1cbiAgLy8g0YTRg9C90LrRhtC40Y8g0L/QvtC70YPRh9C10L3QuNGPINC40L3RhNC+0YDQvNCw0YbQuNC4INC/0L7Qu9GM0LfQvtCy0LDRgtC10LvRj1xuICBnZXRTdW5yaXNlU3Vuc2V0RGF0YShsYXRpdHVkZSwgbG9uZ2l0dWRlKSB7XG4gICAgcmV0dXJuIHRoaXMuX3JlcXVlc3QoYGpzb24/bGF0PSR7bGF0aXR1ZGV9JmxuZz0ke2xvbmdpdHVkZX1gLCB7bWV0aG9kOiAnR0VUJ30pXG4gIH1cbn0iXSwibmFtZXMiOlsicGFnZSIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsImNoZWNrQm94IiwiY2hlY2tCb3hCYWxsIiwiY2hlY2tCb3hMYWJlbCIsImNvbnRlbnROYW1lIiwidGltZXJOdW1iZXJzIiwicXVlcnlTZWxlY3RvckFsbCIsInRpbWVyVGl0bGVzIiwiZGF5cyIsImdldEVsZW1lbnRCeUlkIiwiaG91cnMiLCJtaW51dGVzIiwic2Vjb25kcyIsImljb25JbnN0YWdyYW0iLCJpY29uRmFjZWJvb2siLCJpY29uTGlua2VkaW4iLCJjdXJyZW50VGltZSIsIkRhdGUiLCJnZXRIb3VycyIsImdldE1pbnV0ZXMiLCJhcGlMb2NhdGlvbiIsImNvbnN0cnVjdG9yIiwiZGF0YSIsInRoaXMiLCJfYXBpVXJsIiwiYXBpVXJsIiwiX2dldFJlcyIsInJlcyIsIm9rIiwianNvbiIsIlByb21pc2UiLCJyZWplY3QiLCJzdGF0dXMiLCJfcmVxdWVzdCIsInVybCIsIm9wdGlvbnMiLCJmZXRjaCIsInRoZW4iLCJnZXRVc2VyTG9jYXRpb24iLCJtZXRob2QiLCJhcGlTdW5yaXNlU3Vuc2V0IiwiX2hlYWRlcnMiLCJoZWFkZXJzIiwiZ2V0U3VucmlzZVN1bnNldERhdGEiLCJsYXRpdHVkZSIsImxvbmdpdHVkZSIsInNldFplcm8iLCJudW0iLCJzd2l0Y2hUaGVtZSIsImNsYXNzTGlzdCIsInRvZ2dsZSIsImZvckVhY2giLCJudW1iZXIiLCJ0aXRsZSIsImNvbnZlcnRUaW1lIiwidGltZVN0ciIsInRpbWUiLCJtb2RpZmllciIsInNwbGl0IiwicGFyc2VJbnQiLCJlbmR0aW1lIiwidGltZUludGVydmFsIiwic2V0SW50ZXJ2YWwiLCJ1cGRhdGVDbG9jayIsInQiLCJwYXJzZSIsIk1hdGgiLCJmbG9vciIsImdldFRpbWVQYXNzZWQiLCJ0b3RhbCIsImNsZWFySW50ZXJ2YWwiLCJ0ZXh0Q29udGVudCIsInNldENsb2NrIiwibGF0IiwibG9uIiwiY29uc29sZSIsImxvZyIsInJlc3VsdHMiLCJzdW5yaXNlVGltZSIsInN1bnJpc2UiLCJzdW5zZXRUaW1lIiwiYXN0cm9ub21pY2FsX3R3aWxpZ2h0X2VuZCIsInNldFRoZW1lIiwiY2F0Y2giLCJlcnIiLCJhZGRFdmVudExpc3RlbmVyIl0sInNvdXJjZVJvb3QiOiIifQ==