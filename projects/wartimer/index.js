(()=>{"use strict";const e=document.querySelector(".page"),t=document.querySelector(".header__checkbox"),s=document.querySelector(".header__checkbox-ball"),n=document.querySelector(".header__checkbox-label"),o=document.querySelector(".name"),r=document.querySelectorAll(".timer__numbers"),c=document.querySelectorAll(".timer__title"),l=document.getElementById("days"),i=document.getElementById("hours"),a=document.getElementById("minutes"),u=document.getElementById("seconds"),_=document.querySelector(".icon__instagram"),h=document.querySelector(".icon__facebook"),g=document.querySelector(".icon__linkedin"),m=`${(new Date).getHours()}:${(new Date).getMinutes()}`;function d(){e.classList.toggle("page_theme_light"),n.classList.toggle("header__checkbox-label_checked"),s.classList.toggle("header__checkbox-ball_checked"),o.classList.toggle("name_theme_light"),r.forEach((e=>e.classList.toggle("timer__numbers_theme_light"))),c.forEach((e=>e.classList.toggle("timer__title_theme_light"))),_.classList.toggle("icon__instagram_theme_light"),h.classList.toggle("icon__facebook_theme_light"),g.classList.toggle("icon__linkedin_theme_light")}const p=new class{constructor(e){this._apiUrl=e.apiUrl}_getRes(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}_request(e,t){return fetch(`${this._apiUrl}/${e}`,t).then(this._getRes)}getUserLocation(){return this._request("json",{method:"GET"})}}({apiUrl:"http://ip-api.com"}),f=new class{constructor(e){this._apiUrl=e.apiUrl,this._headers=e.headers}_getRes(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}_request(e,t){return fetch(`${this._apiUrl}/${e}`,t).then(this._getRes)}getSunriseSunsetData(e,t){return this._request(`json?lat=${e}&lng=${t}`,{method:"GET"})}}({apiUrl:"https://api.sunrise-sunset.org"});function y(e){const[t,s]=e.split(" ");let[n,o]=t.split(":");return"12"===n&&(n="00"),"PM"===s&&(n=parseInt(n,10)+12),`${n}:${o}`}function k(e){return e>0&&e<10?`0${e}`:e}!function(e){const t=setInterval(s,1e3);function s(){const e=function(e){const t=Date.parse(new Date)-Date.parse(e)-18e6;let s=0,n=0,o=0,r=0;return t>0&&(s=Math.floor(t/1e3/60/60/24),n=Math.floor(t/1e3/60/60%24),o=Math.floor(t/1e3/60%60),r=Math.floor(t/1e3%60)),{total:t,days:s,hours:n,minutes:o,seconds:r}}("2022-02-24");e.total<=0&&clearInterval(t),l.textContent=k(e.days),i.textContent=k(e.hours),a.textContent=k(e.minutes),u.textContent=k(e.seconds)}s()}(),p.getUserLocation().then((e=>f.getSunriseSunsetData(e.lat,e.lon).then((e=>{const t=y(e.results.sunrise),s=y(e.results.astronomical_twilight_end);!function(e,t,s){e>=t&&e<=s&&d()}(m,t,s)})).catch((e=>console.log(e))))).catch((e=>console.log(e))),t.addEventListener("change",d),s.addEventListener("click",d)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,